# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                           controllers.Application.redirectToWeb
GET     /web                        controllers.Application.redirectToWeb
GET     /web/                        controllers.Application.showWeb
GET     /web/assets/*file               controllers.Assets.at(path="/public", file)

### During development, use enginebase controller instead to avoid cache problems
# TODO: remove these new routes when work on PDIO-235
GET     /web/enginebase/*file               controllers.Assets.at(path="/enginebase", file)
# GET     /web/enginebase/*file                controllers.Application.enginebase(file)

# TODO: use these new routes when work on PDIO-235
#GET    /engineinfos/:engineinfoid/:filename   controllers.engineinfo.getFile(engineinfoid, filename)
#GET    /algoinfos/:algoinfoid/:filename       controllers.algoinfo.getFile(algoinfoid, filename)


POST    /signin                        controllers.Application.signin
POST    /signout                       controllers.Application.signout

# Admin User
GET     /auth                          controllers.Application.getAuth

# An App
GET     /apps                          controllers.Application.getApplist
GET     /apps/:id                      controllers.Application.getApp(id)
POST    /apps                          controllers.Application.createApp
DELETE  /apps/:id                      controllers.Application.removeApp(id)
#PUT    /apps/:id                      controllers.Application.updateApp(id)
GET     /apps/:id/details              controllers.Application.getAppDetails(id)
GET     /apps/:id/engines              controllers.Application.getAppEnginelist(id)
POST    /apps/:id/erase_data           controllers.Application.eraseAppData(id)

# System Level
GET     /engineinfos                   controllers.Application.getEngineTypeList
GET     /engineinfos/:id/algoinfos     controllers.Application.getEngineTypeAlgoList(id)
GET     /engineinfos/:id/metricinfos   controllers.Application.getEngineTypeMetricsTypeList(id)

# An Engine of an App
GET     /apps/:appid/engines/:id      controllers.Application.getEngine(appid, id)
POST    /apps/:appid/engines          controllers.Application.createEngine(appid)
DELETE  /apps/:appid/engines/:id      controllers.Application.removeEngine(appid: Int, id: Int)

GET     /apps/:appid/engines/:engineid/algos_available      controllers.Application.getAvailableAlgoList(appid, engineid)
GET     /apps/:appid/engines/:engineid/algos_available/:id  controllers.Application.getAvailableAlgo(appid, engineid, id)
POST    /apps/:appid/engines/:engineid/algos_available      controllers.Application.createAvailableAlgo(appid, engineid)
DELETE  /apps/:appid/engines/:engineid/algos_available/:id  controllers.Application.removeAvailableAlgo(appid: Int, engineid: Int, id: Int)

GET     /apps/:appid/engines/:engineid/algos_deployed       controllers.Application.getDeployedAlgo(appid, engineid)
POST    /apps/:appid/engines/:engineid/algos_deploy         controllers.Application.algoDeploy(appid, engineid)
POST    /apps/:appid/engines/:engineid/algos_undeploy       controllers.Application.algoUndeploy(appid, engineid)
POST    /apps/:appid/engines/:engineid/algos_trainnow       controllers.Application.algoTrainNow(appid, engineid)

GET     /apps/:appid/engines/:engineid/simevals             controllers.Application.getSimEvalList(appid, engineid)
POST    /apps/:appid/engines/:engineid/simevals             controllers.Application.createSimEval(appid, engineid)
DELETE  /apps/:appid/engines/:engineid/simevals/:id         controllers.Application.removeSimEval(appid: Int, engineid: Int, id: Int)
GET     /apps/:appid/engines/:engineid/simevals/:id/report  controllers.Application.getSimEvalReport(appid, engineid, id)

GET     /apps/:appid/engines/:engineid/algos_available/:algoid/autotune_report   controllers.Application.getAlgoAutotuningReport(appid, engineid, algoid)
POST    /apps/:appid/engines/:engineid/algos_available/:algoid/autotune_apply    controllers.Application.algoAutotuningSelect(appid, engineid, algoid)

# Engine Module
#GET    /apps/:appid/engines/:engineid/settings        controllers.Application.getEngineSettings(appid, engineid) # TODO: use this when work on PDIO-227
#PUT    /apps/:appid/engines/:engineid/settings        controllers.Application.updateEngineSettings(appid, engineid) # TODO: use this when work on PDIO-227

# TODO remove the following when work on PDIO-227
GET     /modules/itemrec/settings/app/:appid/engine/:engineid     controllers.Itemrec.Engine.getSettings(appid, engineid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid     controllers.Itemrec.Engine.updateSettings(appid, engineid)

GET     /modules/itemsim/settings/app/:appid/engine/:engineid     controllers.Itemsim.Engine.getSettings(appid, engineid)
PUT     /modules/itemsim/settings/app/:appid/engine/:engineid     controllers.Itemsim.Engine.updateSettings(appid, engineid)

# Algo Module
#GET     /apps/:appid/engines/:engineid/algos/:algoid/settings    controllers.Application.getAlgoSettings(appid, engineid, algoid) # TODO use this when work on PDIO-227
#PUT     /apps/:appid/engines/:engineid/algos/:algoid/settings    controllers.Application.updateAlgoSettings(appid, engineid, algoid) # TODO use this when work on PDIO-227

# TODO remove the following when work on PDIO-227
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/pdio-knnitembased/:algoid     controllers.Itemrec.PdioKnnItemBased.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/pdio-knnitembased/:algoid     controllers.Itemrec.PdioKnnItemBased.updateSettings(appid, engineid, algoid)

GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-itembased/:algoid     controllers.Itemrec.MahoutItemBased.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-itembased/:algoid     controllers.Itemrec.MahoutItemBased.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-parallelals/:algoid     controllers.Itemrec.MahoutParallelALS.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-parallelals/:algoid     controllers.Itemrec.MahoutParallelALS.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-knnuserbased/:algoid     controllers.Itemrec.MahoutKnnUserBased.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-knnuserbased/:algoid     controllers.Itemrec.MahoutKnnUserBased.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-thresholduserbased/:algoid     controllers.Itemrec.MahoutThresholdUserBased.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-thresholduserbased/:algoid     controllers.Itemrec.MahoutThresholdUserBased.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-slopeone/:algoid     controllers.Itemrec.MahoutSlopeOne.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-slopeone/:algoid     controllers.Itemrec.MahoutSlopeOne.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-alswr/:algoid     controllers.Itemrec.MahoutALSWR.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-alswr/:algoid     controllers.Itemrec.MahoutALSWR.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-svdsgd/:algoid     controllers.Itemrec.MahoutSVDSGD.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-svdsgd/:algoid     controllers.Itemrec.MahoutSVDSGD.updateSettings(appid, engineid, algoid)
GET     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-svdplusplus/:algoid     controllers.Itemrec.MahoutSVDPlusPlus.getSettings(appid, engineid, algoid)
PUT     /modules/itemrec/settings/app/:appid/engine/:engineid/mahout-svdplusplus/:algoid     controllers.Itemrec.MahoutSVDPlusPlus.updateSettings(appid, engineid, algoid)

GET     /modules/itemsim/settings/app/:appid/engine/:engineid/pdio-itemsimcf/:algoid     controllers.Itemsim.ItemSimCF.getSettings(appid, engineid, algoid)
PUT     /modules/itemsim/settings/app/:appid/engine/:engineid/pdio-itemsimcf/:algoid     controllers.Itemsim.ItemSimCF.updateSettings(appid, engineid, algoid)

GET     /modules/itemsim/settings/app/:appid/engine/:engineid/mahout-itemsimcf/:algoid     controllers.Itemsim.MahoutItemSimCF.getSettings(appid, engineid, algoid)
PUT     /modules/itemsim/settings/app/:appid/engine/:engineid/mahout-itemsimcf/:algoid     controllers.Itemsim.MahoutItemSimCF.updateSettings(appid, engineid, algoid)

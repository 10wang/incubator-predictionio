# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                           controllers.Application.redirectToWeb
GET     /web                        controllers.Application.redirectToWeb
GET     /web/                        controllers.Application.showWeb
GET     /web/assets/*file               controllers.Assets.at(path="/public", file)

### During development, use enginebase controller instead to avoid cache problems
GET     /web/enginebase/*file               controllers.Assets.at(path="/enginebase", file)
# GET     /web/enginebase/*file                controllers.Application.enginebase(file)

# TODO: use these new routes
#GET    /engineinfos/:engineinfoid/:filename   controllers.engineinfo.getFile(engineinfoid, filename)
#GET    /algoinfos/:algoinfoid/:filename       controllers.algoinfo.getFile(algoinfoid, filename)


POST    /signin                       controllers.Application.signin
POST    /signout                    controllers.Application.signout

# Admin User
GET     /auth                       controllers.Application.getAuth

# An App
GET     /apps                          controllers.Application.getApplist
GET     /apps/:id                      controllers.Application.getApp(id)
POST    /apps                          controllers.Application.createApp
DELETE  /apps/:id                      controllers.Application.removeApp(id)
#PUT    /apps/:id                      controllers.Application.updateApp(id)
GET     /apps/:id/details              controllers.Application.getAppDetails(id)
GET     /apps/:id/engines              controllers.Application.getAppEnginelist(id)
POST    /apps/:id/erase_data           controllers.Application.eraseAppData(id)

# System Level
GET     /engineinfos                   controllers.Application.getEngineTypeList
GET     /engineinfos/:id/algoinfos     controllers.Application.getEngineTypeAlgoList(id)
GET     /engineinfos/:id/metricinfos   controllers.Application.getEngineTypeMetricsTypeList(id)

# An Engine of an App
GET     /apps/:app_id/engines/:id      controllers.Application.getEngine(app_id, id)
POST    /apps/:app_id/engines          controllers.Application.createEngine(app_id)
DELETE  /apps/:app_id/engines/:id      controllers.Application.removeEngine(app_id, id)

GET     /apps/:app_id/engines/:engine_id/algos_available      controllers.Application.getAvailableAlgoList(app_id, engine_id)
GET     /apps/:app_id/engines/:engine_id/algos_available/:id  controllers.Application.getAvailableAlgo(app_id, engine_id, id)
POST    /apps/:app_id/engines/:engine_id/algos_available      controllers.Application.createAvailableAlgo(app_id, engine_id)
DELETE  /apps/:app_id/engines/:engine_id/algos_available/:id  controllers.Application.removeAvailableAlgo(app_id: Int, engine_id: Int, id: Int)

GET     /apps/:app_id/engines/:engine_id/algos_deployed       controllers.Application.getDeployedAlgo(app_id, engine_id)
POST    /apps/:app_id/engines/:engine_id/algos_deploy         controllers.Application.algoDeploy(app_id, engine_id)
POST    /apps/:app_id/engines/:engine_id/algos_undeploy       controllers.Application.algoUndeploy(app_id, engine_id)
POST    /apps/:app_id/engines/:engine_id/algos_trainnow       controllers.Application.algoTrainNow(app_id, engine_id)

GET     /apps/:app_id/engines/:engine_id/simevals             controllers.Application.getSimEvalList(app_id, engine_id)
POST    /apps/:app_id/engines/:engine_id/simevals             controllers.Application.createSimEval(app_id, engine_id)
DELETE  /apps/:app_id/engines/:engine_id/simevals/:id         controllers.Application.removeSimEval(app_id: Int, engine_id: Int, id: Int)
#GET     /app/:app_id/engine/:engine_id/simeval_report/:id    controllers.Application.getSimEvalReport(app_id, engine_id, id) # TODO: remove
GET     /apps/:app_id/engines/:engine_id/simevals/:id/report  controllers.Application.getSimEvalReport(app_id, engine_id, id)

#GET     /apps/:app_id/engines/:engine_id/algoautotuning_report/:algo_id   controllers.Application.getAlgoAutotuningReport(app_id, engine_id, algo_id) # TODO: remove
GET     /apps/:app_id/engines/:engine_id/algos_available/:algo_id/autotune_report   controllers.Application.getAlgoAutotuningReport(app_id, engine_id, algo_id)

# TODO remove
POST    /app/:app_id/engine/:engine_id/algo/:algo_id/algoautotuning_select/:algoautotune_id  controllers.Application.algoAutotuningSelect(app_id, engine_id, algo_id, algoautotune_id)

#POST   /app/:app_id/engine/:engine_id/algos_available/:algo_id/autotune_apply  controllers.Application.algoAutotuningSelect(app_id, engine_id, algo_id) # TODO use this (tuned_algo_id convert to POST param)

# Engine Module
#GET    /apps/:app_id/engines/:engine_id/settings        controllers.Application.getEngineSettings(app_id, engine_id) # TODO: use this
#PUT    /apps/:app_id/engines/:engine_id/settings        controllers.Application.updateEngineSettings(app_id, engine_id) # TODO: use this

# TODO remove the following
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id     controllers.Itemrec.Engine.getSettings(app_id, engine_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id     controllers.Itemrec.Engine.updateSettings(app_id, engine_id)

GET     /modules/itemsim/settings/app/:app_id/engine/:engine_id     controllers.Itemsim.Engine.getSettings(app_id, engine_id)
PUT     /modules/itemsim/settings/app/:app_id/engine/:engine_id     controllers.Itemsim.Engine.updateSettings(app_id, engine_id)

# Algo Module
#GET     /apps/:app_id/engines/:engine_id/algos/:algo_id/settings    controllers.Application.getAlgoSettings(app_id, engine_id, algo_id) # TODO use this
#PUT     /apps/:app_id/engines/:engine_id/algos/:algo_id/settings    controllers.Application.updateAlgoSettings(app_id, engine_id, algo_id) # TODO use this

# TODO remove the following
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/pdio-knnitembased/:algo_id     controllers.Itemrec.PdioKnnItemBased.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/pdio-knnitembased/:algo_id     controllers.Itemrec.PdioKnnItemBased.updateSettings(app_id, engine_id, algo_id)

GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-itembased/:algo_id     controllers.Itemrec.MahoutItemBased.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-itembased/:algo_id     controllers.Itemrec.MahoutItemBased.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-parallelals/:algo_id     controllers.Itemrec.MahoutParallelALS.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-parallelals/:algo_id     controllers.Itemrec.MahoutParallelALS.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-knnuserbased/:algo_id     controllers.Itemrec.MahoutKnnUserBased.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-knnuserbased/:algo_id     controllers.Itemrec.MahoutKnnUserBased.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-thresholduserbased/:algo_id     controllers.Itemrec.MahoutThresholdUserBased.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-thresholduserbased/:algo_id     controllers.Itemrec.MahoutThresholdUserBased.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-slopeone/:algo_id     controllers.Itemrec.MahoutSlopeOne.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-slopeone/:algo_id     controllers.Itemrec.MahoutSlopeOne.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-alswr/:algo_id     controllers.Itemrec.MahoutALSWR.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-alswr/:algo_id     controllers.Itemrec.MahoutALSWR.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-svdsgd/:algo_id     controllers.Itemrec.MahoutSVDSGD.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-svdsgd/:algo_id     controllers.Itemrec.MahoutSVDSGD.updateSettings(app_id, engine_id, algo_id)
GET     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-svdplusplus/:algo_id     controllers.Itemrec.MahoutSVDPlusPlus.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemrec/settings/app/:app_id/engine/:engine_id/mahout-svdplusplus/:algo_id     controllers.Itemrec.MahoutSVDPlusPlus.updateSettings(app_id, engine_id, algo_id)

GET     /modules/itemsim/settings/app/:app_id/engine/:engine_id/pdio-itemsimcf/:algo_id     controllers.Itemsim.ItemSimCF.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemsim/settings/app/:app_id/engine/:engine_id/pdio-itemsimcf/:algo_id     controllers.Itemsim.ItemSimCF.updateSettings(app_id, engine_id, algo_id)

GET     /modules/itemsim/settings/app/:app_id/engine/:engine_id/mahout-itemsimcf/:algo_id     controllers.Itemsim.MahoutItemSimCF.getSettings(app_id, engine_id, algo_id)
PUT     /modules/itemsim/settings/app/:app_id/engine/:engine_id/mahout-itemsimcf/:algo_id     controllers.Itemsim.MahoutItemSimCF.updateSettings(app_id, engine_id, algo_id)

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="L2CruW9v9v4lHuh5ObC>RLJXNu7f59m]o>pU0P6JW/8yGd6a2?uNPB?E^ohv;p?M"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Logger used by Quartz
logger.org.quartz=INFO

# Logger used by PredictionIO Scheduler
logger.io.prediction.scheduler=INFO

# PredictionIO Repository Base (For Development Only)
io.prediction.base=../..

# Used by PredictionIO Commons
io.prediction.commons.appdata.db.type=mongodb
io.prediction.commons.appdata.db.host=localhost
io.prediction.commons.appdata.db.port=27017

io.prediction.commons.appdata.test.db.type=mongodb
io.prediction.commons.appdata.test.db.host=localhost
io.prediction.commons.appdata.test.db.port=27017

io.prediction.commons.appdata.training.db.type=mongodb
io.prediction.commons.appdata.training.db.host=localhost
io.prediction.commons.appdata.training.db.port=27017

io.prediction.commons.modeldata.db.type=mongodb
io.prediction.commons.modeldata.db.host=localhost
io.prediction.commons.modeldata.db.port=27017

io.prediction.commons.modeldata.training.db.type=mongodb
io.prediction.commons.modeldata.training.db.host=localhost
io.prediction.commons.modeldata.training.db.port=27017

io.prediction.commons.settings.db.type=mongodb
io.prediction.commons.settings.db.host=localhost
io.prediction.commons.settings.db.port=27017

# PredictionIO Algorithms
pdio-knnitembased.jar=${io.prediction.base}/process/hadoop/scala/target/PredictionIO-Process-Hadoop-Scala-assembly-0.3-SNAPSHOT.jar
pdio-latestrank.jar=${io.prediction.base}/process/hadoop/scala/target/PredictionIO-Process-Hadoop-Scala-assembly-0.3-SNAPSHOT.jar
pdio-randomrank.jar=${io.prediction.base}/process/hadoop/scala/target/PredictionIO-Process-Hadoop-Scala-assembly-0.3-SNAPSHOT.jar
io.prediction.algorithms.scalding.jar=${io.prediction.base}/process/hadoop/scala/target/PredictionIO-Process-Hadoop-Scala-assembly-0.3-SNAPSHOT.jar
io.prediction.algorithms.mahout.jar=${io.prediction.base}/lib/mahout-core-0.7-job.jar

# PredictionIO Offline Evaluation
io.prediction.evaluations.itemrec.topkitems.jar=${io.prediction.base}/process/hadoop/scala/engines/itemrec/evaluations/topkitems/target/TopKItems-assembly-0.3-SNAPSHOT.jar
io.prediction.evaluations.scalding.itemrec.trainingtestsplit.jar=${io.prediction.base}/process/hadoop/scala/target/PredictionIO-Process-Hadoop-Scala-assembly-0.3-SNAPSHOT.jar
